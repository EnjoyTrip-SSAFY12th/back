<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trip.enjoy_trip.repository.ReviewRepository">

    <!-- 리뷰 추가 -->
    <insert id="insertReview" useGeneratedKeys="true" keyProperty="reviewId">
        INSERT INTO review (content, point, visibility, user_id, attraction_id, gugun_id, gugun_sido_id)
        VALUES (#{content}, #{point}, #{visibility}, #{userId}, #{attractionId}, #{gugunId}, #{gugunSidoId})
    </insert>


    <!-- 리뷰 이미지 추가 -->
    <insert id="insertReviewImages">
        INSERT INTO review_image (review_id, image_url, order_index)
        VALUES
        <foreach collection="imageUrls" item="imageUrl" index="index" separator=",">
            (#{reviewId}, #{imageUrl}, #{index})
        </foreach>
    </insert>

    <!-- 리뷰 수정 -->
    <update id="updateReview">
        UPDATE review
        SET
        content = #{content},
        point = #{point},
        visibility = #{visibility}
        WHERE review_id = #{reviewId}
    </update>

    <!-- 리뷰 이미지 삭제 -->
    <delete id="deleteReviewImages">
        DELETE FROM review_image
        WHERE review_id = #{reviewId}
    </delete>

    <!-- 리뷰 삭제 -->
    <delete id="deleteReview">
        DELETE FROM review
        WHERE review_id = #{reviewId}
    </delete>

    <!-- ResultMap 설정 -->
    <resultMap id="ReviewWithImagesResultMap" type="com.trip.enjoy_trip.dto.ReviewDto">
        <id column="review_id" property="reviewId"/>
        <result column="content" property="content"/>
        <result column="point" property="point"/>
        <result column="visibility" property="visibility"/>
        <result column="user_id" property="userId"/>
        <result column="attraction_id" property="attractionId"/>
        <result column="gugun_id" property="gugunId"/>
        <result column="gugun_sido_id" property="gugunSidoId"/>
        <result column="created_at" property="createdAt"/>
        <!-- 이미지 URL 리스트 설정 -->
        <collection property="imageUrls" ofType="string">
            <result column="image_url"/>
        </collection>
    </resultMap>

    <!-- 전체 리뷰 조회 -->
    <select id="findAll" resultMap="ReviewWithImagesResultMap">
        SELECT DISTINCT
        r.review_id AS review_id,
        r.content,
        r.point,
        r.visibility,
        r.user_id AS user_id,
        r.attraction_id AS attraction_id,
        r.gugun_id AS gugun_id,
        r.gugun_sido_id AS gugun_sido_id,
        r.created_at AS created_at,
        ri.image_url AS image_url  <!-- image_url 별칭 추가 -->
        FROM review r
        LEFT JOIN review_image ri ON r.review_id = ri.review_id
    </select>

    <!-- 리뷰 상세 조회 -->
    <select id="findById" parameterType="int" resultMap="ReviewWithImagesResultMap">
        SELECT DISTINCT
        r.review_id AS review_id,
        r.content,
        r.point,
        r.visibility,
        r.user_id AS user_id,
        r.attraction_id AS attraction_id,
        r.gugun_id AS gugun_id,
        r.gugun_sido_id AS gugun_sido_id,
        r.created_at AS created_at,
        ri.image_url AS image_url  <!-- image_url 별칭 추가 -->
        FROM review r
        LEFT JOIN review_image ri ON r.review_id = ri.review_id
        WHERE r.review_id = #{reviewId}
    </select>

    <!-- 좋아요 삽입 -->
<!--    <insert id="insertLike">-->
<!--        INSERT INTO `like` (review_id)-->
<!--        VALUES (#{reviewId})-->
<!--    </insert>-->

    <!-- 좋아요 삽입 -->
    <insert id="insertLike">
        INSERT INTO `like` (review_id, user_id)
        VALUES (#{reviewId}, #{userId})
    </insert>

</mapper>
